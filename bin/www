#!/usr/bin/env node

/**
 * freeCodeCamp - Back End Development Certification - Dynamic Web Application Projects
 * WWWW
 * 
 * @author MLBORS
 * @version 1.0.0.0
 * @since 2017.24.11
 * @for freeCodeCamp
 */

/*******************/
/***** IMPORTS *****/
/*******************/

var app = require('../app');
var debug = require('debug')('pinterest-clone:server');
var http = require('http');

/************************************************************/
/************************************************************/

/****************/
/***** PORT *****/
/****************/

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/************************************************************/
/************************************************************/

/******************/
/***** SERVER *****/
/******************/

var server = http.createServer(app);

/************************************************************/
/************************************************************/

/******************/
/***** LISTEN *****/
/******************/

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/************************************************************/
/************************************************************/

/*********************/
/***** NORMALIZE *****/
/*********************/

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/************************************************************/
/************************************************************/

/***********************/
/***** ERROR EVENT *****/
/***********************/

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/************************************************************/
/************************************************************/

/***************************/
/***** LISTENING EVENT *****/
/***************************/

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
